@page "/"
<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (var animalNumber=0; animalNumber<shuffledAnimals.Count; animalNumber++)
            {
                var animal = shuffledAnimals[animalNumber];
                var uniqueDescription = $"Button #{animalNumber}";

                <div class="col-3">
                    <button @onclick="@(() => ButtonClick(animal, uniqueDescription))" type="button" class="btn btn-outline-dark" >
                        <h1>@animal</h1>
                    </button>
                </div>
            }
    </div>
</div>

@code{
    List<string> animalEmoji = new List<string>() {
        "🐶","🐶",
        "🐕","🐕",
        "🐴","🐴",
        "🐪","🐪",
        "🐱","🐱",
        "🐹","🐹"
    };


    List<String> shuffledAnimals = new List<string>();

    protected override void OnInitialized()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji
            .OrderBy(items => random.Next())
            .ToList();
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(String animal, String animalDescription) {
        if (lastAnimalFound == String.Empty){
            lastAnimalFound = animal;
        }
        else if ((lastAnimalFound == animal) && (animalDescription != lastDescription)) {
            lastAnimalFound = String.Empty;

            shuffledAnimals = shuffledAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();
        }
        else {
            lastAnimalFound = string.Empty;
        }
    }
}
